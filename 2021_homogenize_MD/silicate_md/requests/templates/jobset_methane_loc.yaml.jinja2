{#For a set of simulations varying only the methane position
Template variables:
Required:
  - setname = name for this group of jobs
  - stage = stage number
  - temp = temperature (Kelvin)
  - spring = spring constant (consistent units for wham distances and energies)
  - joblist = list of data for each job:
    - jobname = name of this job within the group
    - atm_x
    - atm_y
    - atm_z = methane coordinates, as floats

#}
%YAML 1.2
#Generate gromacs input files
---
{%block folder_structure scoped%}
#Folder Structure
- !UpdateFolderStructure
  CommonFile: [common]
  CommonCoords: [common, coords]
  CommonTopology: [common, topology]
  CommonJobs: [common, jobs]
  CommonMethane: [common, methane]
  CommonMDP: [common, mdp]
  CommonWHAM: [common, wham]
  Produced: [jobs, prepared, 0, 1]
  ProducedTop: [jobs, prepared, 0]
  ProducedWHAM: [jobs, prepared, 0, wham]
  SetTemplate: [requests, templates, jobs, 0]
  ScriptFile: [scripts]
# #Folder Structure
# - !DumpFolderStructure
#   name: dump_folder_structure
#   outfile: !DataFile folder_structure_{{setname}}.yaml
{%endblock%}
{%block submission_script scoped%}
#Script to submit all the jobs
- !TemplateFileRequest
  name: {{setname}}.submit-jobs
  tmplfile: !CommonJobs submit_jobs.sh.jinja2
  outfile: !ProducedTop submit_jobs_{{stage}}.sh
  data:
    stage: {{stage}}
{% if node_exclusions is defined%}
    node_exclusions: "-x {{node_exclusions}}"
{% endif %}
  prepcommands:
    - [load_yaml, {infpath: !ProducedTop joblist.yaml, attrpath: data.joblist}]
- !CommonShellCommandRequest
  name: {{setname}}.submission.chmod
  commandargs:
    - chmod
    - u+x
    - !ProducedTop submit_jobs_{{stage}}.sh
  input_args: [2]
{%endblock%}
{%block wham_metafiles scoped%}
{% if linelist is defined %}
#Metafiles for wham
{% for mfid, startval, stopval, numsteps in linelist %}
- !TemplateFileRequest
  name: {{setname}}.wham.metafile.{{mfid}}
  tmplfile: !CommonWHAM metafile_1d.dat.jinja2
  outfile: !ProducedWHAM metafile{{mfid}}.dat
  data:
    spring: {{spring}}
    mfid: "{{mfid}}"
  prepcommands:
    - [load_yaml, {infpath: !ProducedWHAM windows.yaml, attrpath: data.windows}]
{% endfor %}
{% endif %}
{%endblock%}
{%block wham_runscript scoped%}
{% if linelist is defined %}
#Script to run wham
- !TemplateFileRequest
  name: {{setname}}.wham.runfile
  tmplfile: !CommonWHAM run_wham_1d.sh.jinja2
  outfile: !ProducedWHAM run_wham_{{stage}}.sh
  data:
    temp: {{temp}}
  prepcommands:
    - [load_yaml, {infpath: !ProducedWHAM linelist.yaml, attrpath: data.linelist}]
- !CommonShellCommandRequest
  name: {{setname}}.wham.chmod
  commandargs:
    - chmod
    - u+x
    - !ProducedWHAM run_wham_{{stage}}.sh
  input_args: [2]
{% endif %}
{%endblock%}
{%block wham2d_metafiles scoped%}
{% if planelist is defined %}
#Metafiles for wham2d
{% for mfid, xstart, xstop, xnum, ystart, ystop, ynum in planelist %}
- !TemplateFileRequest
  name: {{setname}}.wham2d.metafile.{{mfid}}
  tmplfile: !CommonWHAM metafile_2d.dat.jinja2
  outfile: !ProducedWHAM metafile_2d_{{mfid}}.dat
  data:
    xspring: {{spring}}
    yspring: {{spring}}
    mfid: "{{mfid}}"
  prepcommands:
    - [load_yaml, {infpath: !ProducedWHAM windows2d.yaml, attrpath: data.windows}]
{% endfor %}
{% endif %}
{%endblock%}
{%block wham2d_runscript scoped%}
{% if planelist is defined %}
#Script to run wham-2d
- !TemplateFileRequest
  name: {{setname}}.wham2d.runfile
  tmplfile: !CommonWHAM run_wham_2d.sh.jinja2
  outfile: !ProducedWHAM run_wham2d_{{stage}}.sh
  data:
    temp: {{temp}}
  prepcommands:
    - [load_yaml, {infpath: !ProducedWHAM planelist.yaml, attrpath: data.planelist}]
- !CommonShellCommandRequest
  name: {{setname}}.wham.chmod
  commandargs:
    - chmod
    - u+x
    - !ProducedWHAM run_wham2d_{{stage}}.sh
  input_args: [2]
{% endif %}
{%endblock%}

#All jobs
{% for jobname, atm_x, atm_y, atm_z in joblist %}
#id={{jobname}}
{%block single_job scoped%}
{%include "job_inner.yaml.jinja2" %}
{%endblock%}
{% endfor %}
